{
       "Course": "MATH",
       "Topic": "Counting & Probability",
       "Original question": "How many four-digit positive integers have at least one digit that is a 2 or a 3?",
       "Codex input": "Same as original question",
       "Codex code": "def has_2_or_3(n):\n    for d in str(n):\n        if d in ['2', '3']:\n            return True\n    return False\n\ndef main():\n    count = 0\n    for n in range(1000, 10000):\n        if has_2_or_3(n):\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()",
       "Codex code explanation": "1. It's creating a variable called count and setting it to 0.\n2. It's creating a for loop that loops through all the numbers from 1000 to 10000.\n3. It's checking if the number has a 2 or a 3 in it.\n4. If it does, it adds 1 to the count variable.\n5. It prints the count variable.",
       "Program solution": 5416.0,
       "Solution type": "Automatic Zero-shot",
       "GPT-3 response": "There are 24 four-digit positive integers with at least one digit that is a 2 or a 3.",
       "GPT-3 evaluation": "Incorrect"
}