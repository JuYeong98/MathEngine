{
       "Course": "MATH",
       "Topic": "Prealgebra",
       "Original question": "What is the sum of the prime numbers between 10 and 20?",
       "Codex input": "Write a program that finds the sum of the prime numbers between 10 and 20.",
       "Codex code": "def is_prime(n):\n    if n == 2 or n == 3:\n        return True\n    if n < 2 or n % 2 == 0:\n        return False\n    if n < 9:\n        return True\n    if n % 3 == 0:\n        return False\n    r = int(n ** 0.5)\n    f = 5\n    while f <= r:\n        if n % f == 0:\n            return False\n        if n % (f + 2) == 0:\n            return False\n        f += 6\n    return True\n\nsum = 0\nfor i in range(10, 21):\n    if is_prime(i):\n        sum += i\n\nprint(sum)",
       "Codex code explanation": "1. We define a function called is_prime that takes in a number n.\n2. We check if n is 2 or 3, and if so, we return True.\n3. We check if n is less than 2 or if n is divisible by 2, and if so, we return False.\n4. We check if n is less than 9, and if so, we return True.\n5. We check if n is divisible by 3, and if so, we return False.\n6. We find the square root of n and store it in r.\n7. We set f to 5.\n8. We enter a while loop that runs as long as f is less than or equal to r.\n9. We check if n is divisible by f, and if so, we return False.\n10. We check if n is divisible by f + 2, and if so, we return False.\n11. We increment f by 6.\n12. We return True.\n13. We set sum to 0.\n14. We enter a for loop that runs from 10 to 21.\n15. We check if i is prime, and if so, we add it to sum.\n16. We print sum.",
       "Program solution": 60.0,
       "Solution type": "Manual",
       "GPT-3 response": "There are six prime numbers between 10 and 20: 11, 13, 17, 19, 23, 29. The sum of these numbers is 116.",
       "GPT-3 evaluation": "Incorrect"
}