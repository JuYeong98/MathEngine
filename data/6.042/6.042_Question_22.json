{
       "Course": "Mathematics for Computer Science",
       "Topic": "Combinatorics",
       "Original question": "How many different solutions over the natural numbers are there to the following equation? x^1 + x^2 + x^3 + . . . + x^8 = 100 A solution is a specification of the value of each variable x_i. Two solutions are different if different values are specified for some variable x_i.",
       "Codex input": "Write a program to find the number of positive integer solutions to the equation x_1**1+x_2**2+x_3**3+x_4**4+x_5**5+x_6**6+x_7**7+x_8**8 = 100. 100 is the highest number to consider for each variable.",
       "Codex code": "def count_solutions(n):\n    count = 0\n    for x1 in range(1, n+1):\n        for x2 in range(1, n+1):\n            for x3 in range(1, n+1):\n                for x4 in range(1, n+1):\n                    for x5 in range(1, n+1):\n                        for x6 in range(1, n+1):\n                            for x7 in range(1, n+1):\n                                for x8 in range(1, n+1):\n                                    if x1**1 + x2**2 + x3**3 + x4**4 + x5**5 + x6**6 + x7**7 + x8**8 == n:\n                                        count += 1\n    return count\n\nprint(count_solutions(100))",
       "Codex code explanation": "1. It's creating a variable called count and setting it to 0.\n2. It's creating a for loop that iterates through the range of 1 to n+1.\n3. It's creating a second for loop that iterates through the range of 1 to n+1.\n4. It's creating a third for loop that iterates through the range of 1 to n+1.\n5. It's creating a fourth for loop that iterates through the range of 1 to n+1.\n6. It's creating a fifth for loop that iterates through the range of 1 to n+1.\n7. It's creating a sixth for loop that iterates through the range of 1 to n+1.\n8. It's creating a seventh for loop that iterates through the range of 1 to n+1.\n9. It's creating an eighth for loop that iterates through the range of 1 to n+1.\n10. It's creating an if statement that checks if the sum of the variables to the power of their respective numbers is equal to n.\n11. If the if statement is true, it adds 1 to the count variable.\n12. It returns the count variable.",
       "Program solution": "107!/100!7!",
       "Solution type": "Manual",
       "GPT-3 response": "def count_solutions(target, powers):\n    \"\"\"\n    >>> count_solutions(100, [1, 2, 3, 4, 5, 6, 7, 8])\n    12\n    \"\"\"\n    if target == 0:\n        return 1\n    elif target < 0 or powers == []:\n        return 0\n    else:\n        return count_solutions(target, powers[1:]) + count_solutions(target - powers[0], powers)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
       "GPT-3 evaluation": "Incorrect"
}