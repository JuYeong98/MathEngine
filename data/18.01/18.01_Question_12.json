{
       "Course": "Single Variable Calculus",
       "Topic": "Applications of Differentiation",
       "Original question": "Use Newton\u2019s method to find all the solutions of the equation correct to eight decimal places. Start by drawing a graph to find initial approximations.  x**5-3*x**4+x**3-x**2-x+6=0",
       "Codex input": "Use Newton\u2019s method to find all the solutions between -1000 and 1000 with integer initial values. x**5-3*x**4+x**3-x**2-x+6=0. Use initial points between -1000 and 1000. Round to 8 decimal places.",
       "Codex code": "import numpy as np\nimport matplotlib.pyplot as plt\n\ndef f(x):\n    return x**5-3*x**4+x**3-x**2-x+6\n\ndef df(x):\n    return 5*x**4-12*x**3+3*x**2-2*x-1\n\ndef newton(x, f, df, epsilon=1e-8, max_iter=1000):\n    for i in range(max_iter):\n        x_new = x - f(x)/df(x)\n        if abs(x_new - x) < epsilon:\n            return x_new\n        x = x_new\n    return x_new\n\ndef main():\n    x = np.linspace(-100, 100, 1000)\n    y = f(x)\n    plt.plot(x, y)\n    plt.grid()\n    plt.show()\n    x_sols = []\n    for i in range(-100, 100):\n        x_sols.append(newton(i, f, df))\n    print(x_sols)\n    print(np.round(x_sols, 8))\n\nif __name__ == '__main__':\n    main()",
       "Codex code explanation": "1. Plotting the function f(x) = x**5-3*x**4+x**3-x**2-x+6\n2. Finding the derivative of f(x)\n3. Using Newton's method to find the roots of f(x)\n4. Plotting the roots of f(x)",
       "Program solution": "Data/Images/18.01-q12-codex-output-plot.png",
       "Solution type": "Manual",
       "GPT-3 response": "There are five solutions.\n\n-1.46557123\n-0.53728871\n0.36082474\n1.12403607\n2.09132432",
       "GPT-3 evaluation": "Incorrect"
}