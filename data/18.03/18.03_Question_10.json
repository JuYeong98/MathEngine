{
       "Course": "Differential Equations",
       "Topic": "Translation and Partial Functions\n",
       "Original question": "Suppose that m=1, k=9, c=0, and F(t)=6cos(3t). Use the inverse transform given in Eq. (16) to derive the solution x(t) = t sin(3t). Construct a figure that illustrates the resonance that occurs.",
       "Codex input": "In a spring system, m=1, k=9, c=0. Add external force 6*cos(3*x).\nUse sympy dsolve with arg ics={f(0):0,f(x).diff(x).subs(x,0):0}.\nAfter everything is done, plot your solution.",
       "Codex code": "import sympy as sp\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = sp.Symbol('x')\nf = sp.Function('f')\n\nm = 1\nk = 9\nc = 0\n\n# external force\nw = 6*sp.cos(3*x)\n\n# differential equation\neq = sp.Eq(f(x).diff(x, x) + c*f(x).diff(x) + k*f(x), w)\n\n# solve differential equation\nsol = sp.dsolve(eq, f(x), ics={f(0):0, f(x).diff(x).subs(x,0):0})\n\n# convert sympy expression to numpy function\nf = sp.lambdify(x, sol.rhs, 'numpy')\n\n# plot\nx = np.linspace(0, 10, 100)\nplt.plot(x, f(x))\nplt.show()",
       "Codex code explanation": "1. Define a symbol x, a function f(x), and a differential equation f(x).diff(x, x) + c*f(x).diff(x) + k*f(x) = w.\n2. Solve the differential equation using dsolve.\n3. Convert the sympy expression to a numpy function.\n4. Plot the function.",
       "Program solution": "data/images/18.03-q10-codex-output-plot.png",
       "Solution type": "manual",
       "GPT-3 response": "Not an image",
       "GPT-3 evaluation": "Incorrect"
}