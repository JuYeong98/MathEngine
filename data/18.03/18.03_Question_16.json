{
       "Course": "Differential Equations",
       "Topic": "Runge-Kutta Method",
       "Original question": "Suppose that a crossbow bolt is shot straight upward with initial velocity 288 ft/s. If its deceleration due to air resistance is (0.04)v, then its height x(t) satisfies the initial value problem x'' = \u221232 \u2212 (0.04)x'; x(0) = 0, x'(0) = 288. Find the maximum height that the bolt attains and the time required for it to reach this height.",
       "Codex input": "Same as original question",
       "Codex code": "import numpy as np\nimport matplotlib.pyplot as plt\n\ndef f(t, y):\n    return np.array([y[1], -32 - 0.04*y[1]])\n\ndef rk4(f, t0, y0, t1, n):\n    h = (t1 - t0)/n\n    t = np.zeros(n+1)\n    y = np.zeros((n+1, 2))\n    t[0] = t0\n    y[0] = y0\n    for i in range(1, n+1):\n        k1 = h*f(t[i-1], y[i-1])\n        k2 = h*f(t[i-1] + h/2, y[i-1] + k1/2)\n        k3 = h*f(t[i-1] + h/2, y[i-1] + k2/2)\n        k4 = h*f(t[i-1] + h, y[i-1] + k3)\n        t[i] = t[i-1] + h\n        y[i] = y[i-1] + (k1 + 2*k2 + 2*k3 + k4)/6\n    return t, y\n\nt0 = 0\ny0 = np.array([0, 288])\nt1 = 10\nn = 1000\n\nt, y = rk4(f, t0, y0, t1, n)\n\nplt.plot(t, y[:,0])\nplt.show()\n\nprint(\"Maximum height:\", max(y[:,0]))\nprint(\"Time to reach maximum height:\", t[np.argmax(y[:,0])])",
       "Codex code explanation": "1. Define the function f(t, y) that returns the derivative of y.\n2. Define the Runge-Kutta 4th order method.\n3. Set the initial conditions.\n4. Run the RK4 method.\n5. Plot the results.\n6. Print the maximum height and the time to reach the maximum height.",
       "Program solution": "Runge-Kutta, h = 0.1: About 1050 ft/in or about 7.7s",
       "Solution type": "Automatic Zero-shot",
       "GPT-3 response": "The maximum height that the bolt attains is 9600 ft and it reaches this height in 60 s.",
       "GPT-3 evaluation": "Incorrect"
}